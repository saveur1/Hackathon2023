import pandas as pd
import streamlit as st
import plotly.graph_objects as go

# Set the page layout to wide
st.set_page_config(layout="wide")
def other_indices2():
    sheet_name = 'other_indices1'
    df = pd.read_excel(excel_file_path, sheet_name=sheet_name)
    df[['Year', 'Month']] = pd.to_datetime(df['YEAR'], format='%Y-%m').dt.strftime('%Y-%m').str.split('-').tolist()

    # Assuming you have columns for the specified indices, update the column names accordingly
    imported_goods_column = 'Imported Goods Index'
    local_goods_column = 'Local Goods Index'
    fresh_products_column = 'Fresh Products index'
    energy_column = 'Energy index'
    general_excluding_fresh_energy_column = 'General Index excluding fresh Products and energy'

    # Convert 'Year' column to integer
    df['Year'] = df['Year'].astype(int)

    # Set the default slider value to start at the year 2017
    default_start_year = 2017
    x_axis_range = st.slider('Select Year Range', min_value=int(df['Year'].min()), max_value=int(df['Year'].max()), 
                            value=(default_start_year, int(df['Year'].max())))

    # Filter the DataFrame based on the selected range
    filtered_df = df[(df['Year'] >= x_axis_range[0]) & (df['Year'] <= x_axis_range[1])]

    # Create the first line chart comparing Imported Goods and Local Goods
    fig1 = go.Figure()

    fig1.add_trace(go.Scatter(x=filtered_df['Year'].astype(str) + '-' + filtered_df['Month'], y=filtered_df[imported_goods_column],
                            mode='lines', name='Imported Goods Index', line=dict(color='red', width=2), marker=dict(size=6)))

    fig1.add_trace(go.Scatter(x=filtered_df['Year'].astype(str) + '-' + filtered_df['Month'], y=filtered_df[local_goods_column],
                            mode='lines', name='Local Goods Index', line=dict(color='blue', width=2), marker=dict(size=6)))

    # Update layout for the first chart
    fig1.update_layout(title='Comparison of Imported Goods vs Local Goods',
                    xaxis_title='Year-Month',
                    yaxis_title='CPI Index',
                    legend=dict(x=0, y=1, traceorder='normal'))

    # Create the second line chart comparing Fresh Products Index, Energy Index, and General Index excluding Fresh Products and Energy
    fig2 = go.Figure()

    fig2.add_trace(go.Scatter(x=filtered_df['Year'].astype(str) + '-' + filtered_df['Month'], y=filtered_df[fresh_products_column],
                            mode='lines', name='Fresh Products Index', line=dict(color='green', width=2), marker=dict(size=6)))

    fig2.add_trace(go.Scatter(x=filtered_df['Year'].astype(str) + '-' + filtered_df['Month'], y=filtered_df[energy_column],
                            mode='lines', name='Energy Index', line=dict(color='orange', width=2), marker=dict(size=6)))

    fig2.add_trace(go.Scatter(x=filtered_df['Year'].astype(str) + '-' + filtered_df['Month'], 
                            y=filtered_df[general_excluding_fresh_energy_column],
                            mode='lines', name='General Index excluding Fresh Products and Energy',
                            line=dict(color='purple', width=2), marker=dict(size=6)))

    # Update layout for the second chart
    fig2.update_layout(title='Comparison of Fresh Products, Energy, and General Index (excluding Fresh Products and Energy)',
                    xaxis_title='Year-Month',
                    yaxis_title='CPI Index',
                    legend=dict(x=0, y=1, traceorder='normal'))

    # Organize the charts into two columns
    col1, col2 = st.columns(2)
    col1.plotly_chart(fig1)
    col2.plotly_chart(fig2)
other_indices2()